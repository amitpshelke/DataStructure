SOLID

S - Single Resposibility Principle: A class should have only one reason to change, meaning that a class should have only one job.

O - Open Close Principle: Object or entities should only be open for extension, but closed for modification.

L - Liskov Substitution Principle: Every sub class/derived class should be substitutable for their base/parent class.
 
I - Interface Seggrigation Principle: A client should never be forced to implement an interface that it doesn't use or client shouldn't be forced 
    to depend on the methods they do not use.

D - Dependency Inversion Principle: Entities must depend on abstraction not on concretation. It states that higher level module must not depend on 
    the low level module, but they should depend on abstractions.